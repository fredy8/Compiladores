function int fact(int k) {
  int ret;

  ret = 1;
  int i;
  for (i = 1; i <= k; i = i+1) {
    ret = ret*i;
  }
  return ret;
}

function int factR(int k) {
  return fact(k);
  if (k == 0) {
    return 1;
  }

  return factR(k) * k;
}

function int fibonacci(int n) {
  int prev, prevprev, i;
  prev = 1;
  prevprev = 1;
  for(i = 2; i <= n; i = i+1) {
    int aux;
    aux = prev + prevprev;
    prevprev = prev;
    prev = aux;
  }

  return prev;
}

function int fibonacciR(int n) {
  return fibonacci(n);
  if (n < 2) {
    return 1;
  }

  return fibonacciR(n) + fibonacciR(n);
}

function int find(int arr[100], int item, int size) {
  int i;
  for (i = 0; i < size; i = i + 1) {
    if (arr[i] == item) {
      return i;
    }
  }

  return -1;
}

function int[100] sort(int array[100], int size) {
  int i, j, aux;
  for(i = 0; i < size; i = i + 1) {
    for(j = i+1; j < size; j++) {
      if (array[i] > array[j]) {
        aux = array[i];
        array[i] = array[j];
        array[j] = aux;
      }
    }
  }
}

function int main() {
  print("Factorial Iterativo\n");
  print(strcat(itos(fact(7)), "\n"));

  print("Factorial Recursivo\n");
  print(strcat(itos(factR(8)), "\n"));

  print("Fibonacci Ciclico\n");
  print(strcat(itos(fibonacci(8)), "\n"));

  print("Fibonacci Recursivo\n");
  print(strcat(itos(fibonacciR(8)), "\n"));

  int arr[100];
  arr[0] = 11;
  arr[1] = 3;
  arr[2] = 9;
  arr[3] = 6;
  print("Find en un vector\n");
  print(strcat(itos(find(arr, 9, 4)), "\n"));

  print("Sort en un vector\n");
  int i;
  int sorted[4];
  sorted = sort(arr);
  for(i = 0; i < 4; i++) {
    print(strcat(itos(sorted[i]), " "));
  }
  print("\n");
}
